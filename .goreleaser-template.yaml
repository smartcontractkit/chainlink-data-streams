env:
  - GOPRIVATE=github.com/smartcontractkit/*
  - ZIG_EXEC={{ if index .Env "ZIG_EXEC"  }}{{ .Env.ZIG_EXEC }}{{ else }}zig{{ end }}
  - IMAGE_REPO={{ if index .Env "IMAGE_REPO"  }}{{ .Env.IMAGE_REPO }}{{ else }}localhost:5001/{{ .ProjectName }}{{ end }}

# See https://goreleaser.com/customization/build/
builds:
  - binary: "{{ .ProjectName }}"
    id: linux-amd64
    main: ./cmd
    env:
      - CGO_ENABLED=1
      - CC=$ZIG_EXEC cc -target x86_64-linux-gnu
      - CCX=$ZIG_EXEC c++ -target x86_64-linux-gnu
    flags:
      - -trimpath
      - -buildmode=pie
    goos:
      - linux
    goarch:
      - amd64
  - binary: "{{ .ProjectName }}"
    id: linux-arm64
    main: ./cmd
    env:
      - CGO_ENABLED=1
      - CC=$ZIG_EXEC cc -target aarch64-linux-gnu
      - CCX=$ZIG_EXEC c++ -target aarch64-linux-gnu
    flags:
      - -trimpath
      - -buildmode=pie
    goos:
      - linux
    goarch:
      - arm64

# See https://goreleaser.com/customization/docker/
dockers:
  - id: linux-amd64
    dockerfile: ./../Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--build-arg=app={{ .ProjectName }}"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
    image_templates:
      - "{{ if and (not .IsSnapshot) (not .IsNightly) }}{{ .Env.IMAGE_REPO }}:{{ .Version }}-amd64{{ end }}"
      - "{{ if or (.IsSnapshot) (.IsNightly) }}{{ .Env.IMAGE_REPO }}:sha-{{ .ShortCommit }}-amd64{{ end }}"

  - id: linux-arm64
    dockerfile: ./../Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--build-arg=app={{ .ProjectName }}"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
    image_templates:
      - "{{ if and (not .IsSnapshot) (not .IsNightly) }}{{ .Env.IMAGE_REPO }}:{{ .Version }}-arm64{{ end }}"
      - "{{ if or (.IsSnapshot) (.IsNightly) }}{{ .Env.IMAGE_REPO }}:sha-{{ .ShortCommit }}-arm64{{ end }}"

# See https://goreleaser.com/customization/docker_manifest/
docker_manifests:
  - name_template: "{{ if and (not .IsSnapshot) (not .IsNightly) }}{{ .Env.IMAGE_REPO }}:{{ .Version }}{{ end }}"
    image_templates:
      - "{{ if and (not .IsSnapshot) (not .IsNightly) }}{{ .Env.IMAGE_REPO }}:{{ .Version }}-amd64{{ end }}"
      - "{{ if and (not .IsSnapshot) (not .IsNightly) }}{{ .Env.IMAGE_REPO }}:{{ .Version }}-arm64{{ end }}"
  - name_template: "{{ if or (.IsSnapshot) (.IsNightly) }}{{ .Env.IMAGE_REPO }}:sha-{{ .ShortCommit }}{{ end }}"
    image_templates:
      - "{{ if or (.IsSnapshot) (.IsNightly) }}{{ .Env.IMAGE_REPO }}:sha-{{ .ShortCommit }}-amd64{{ end }}"
      - "{{ if or (.IsSnapshot) (.IsNightly) }}{{ .Env.IMAGE_REPO }}:sha-{{ .ShortCommit }}-arm64{{ end }}"

checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

# GitHub Release
release:
  github:
    owner: smartcontractkit
    name: chainlink-llo
  # If there is a prerelease suffix on the version tag (e.g. v1.0.0-rc1), then
  # the GitHub Release will be created as a "prerelease".
  # Default is false.
  prerelease: auto
  disable: true
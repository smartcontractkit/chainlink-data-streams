name: push-master

on:
  push:
    branches:
      - master

env:
  PACKAGES: "mercury"

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      matrix_packages: ${{ steps.set-matrix-packages.outputs.matrix_packages }}
      lint_args_packages: ${{ steps.set-matrix-packages.outputs.lint_args_packages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Set matrix packages
        id: set-matrix-packages
        shell: bash
        env:
          PACKAGES: ${{ env.PACKAGES }}
        run: |
          matrix_packages=$(echo "${PACKAGES}" | jq -R 'split(",")' | tr -d "\n\t")
          echo "matrix_packages=${matrix_packages}" | tee -a "${GITHUB_OUTPUT}"
      - name: Set lint args packages
        id: set-lint-args-packages
        shell: bash
        env:
          PACKAGES: ${{ env.PACKAGES }}
        run: echo "lint_args_packages=$(echo "./$(echo $PACKAGES | sed 's/,/\/... .\//g;s/$/\/.../')")" | tee -a "${GITHUB_OUTPUT}"

  ci-lint:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: ci-lint
        uses: smartcontractkit/.github/actions/ci-lint-go@7ac9af09dda8c553593d2153a975b43b6958fa9f # ci-lint-go@0.2.2
        with:
          # grafana inputs
          metrics-job-name: ci-lint
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

          # env inputs
          use-env-files: "true"
          env-files: ./tools/env/ci.env
          # go inputs
          use-go-cache: true
          go-cache-dep-path: "**/go.sum"
          go-version-file: go.mod
          golangci-lint-version: "v1.55.2"
          golangci-lint-args: --out-format colored-line-number,checkstyle:golangci-lint-report.xml ${{ needs.init.outputs.lint_args_packages }}

  ci-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: ci-test
        uses: smartcontractkit/.github/actions/ci-test-go@f8efc6bb91480713ddd64eaabd63d4b97ae6f088 # ci-test-go@0.1.4
        with:
          # grafana inputs
          metrics-job-name: ci-test
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

          # docker inputs
          use-docker-compose: "true"
          docker-compose-workdir: ./tools/docker/setup-postgres
          # env inputs
          use-env-files: "true"
          env-files: ./tools/env/ci.env
          # go inputs
          use-go-cache: "true"
          go-cache-dep-path: "**/go.sum"
          go-version-file: go.mod
          go-test-cmd: make test-ci

  ci-sonarqube:
    needs: [ci-lint, ci-test]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: ci-sonarqube
        uses: smartcontractkit/.github/actions/ci-sonarqube@5b1046c28343660ecb84844c6fa95a66d1cdb52e # ci-sonarqube@0.3.2
        with:
          # grafana inputs
          metrics-job-name: ci-sonarqube
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

          # sonarqube inputs
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}

  cd-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      changesets_published: ${{ steps.cd-release.outputs.published }}
      changesets_publishedPackages: ${{ steps.cd-release.outputs.publishedPackages }}
    steps:
      - name: cd-release
        id: cd-release
        uses: smartcontractkit/.github/actions/cicd-changesets@6da79c7b9f14bec077df2c1ad40d53823b409d9c # cicd-changesets@0.3.3
        with:
          # general inputs
          git-user: app-token-issuer-foundations[bot]
          git-email: app-token-issuer-foundations[bot]@users.noreply.github.com
          pnpm-use-cache: false
          # aws inputs
          aws-region: ${{ secrets.AWS_REGION }}
          aws-role-arn: ${{ secrets.AWS_OIDC_CHAINLINK_DATA_STREAMS_CI_CHANGESET_TOKEN_ISSUER_ROLE_ARN }}
          aws-lambda-url: ${{ secrets.AWS_FOUNDATIONS_GATI_URL }}
          # grafana inputs
          metrics-job-name: cd-release
          gc-basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_CLOUD_HOST }}

syntax = "proto3";

package v1;
option go_package = ".;llo";

import "plugin_codecs.proto";

// LLOOutcomeTelemetry sent on every call to Outcome (once per
// round)
message LLOOutcomeTelemetry {
  string life_cycle_stage = 1;
  uint64 observation_timestamp_nanoseconds = 2;
  // channel id => channel definition
  map<uint32, LLOChannelDefinitionProto> channel_definitions = 3;
  // channel id => valid after nanoseconds
  map<uint32, uint64> valid_after_nanoseconds = 4;
  // stream id => aggregator => value
  map<uint32, LLOAggregatorStreamValue> stream_aggregates = 5;

  uint64 seq_nr = 9;
  bytes config_digest = 10;
  uint32 don_id = 11;
}

message LLOAggregatorStreamValue {
  map<uint32, LLOStreamValue> aggregator_values = 1;
}

// LLOReportTelemetry sent for each report on every call to Reports
message LLOReportTelemetry {
  uint32 channel_id = 1;
  uint64 valid_after_nanoseconds = 2;
  uint64 observation_timestamp_nanoseconds = 3;
  uint32 report_format = 4;
  bool specimen = 5;
  repeated LLOStreamDefinition stream_definitions = 6;
  repeated LLOStreamValue stream_values = 7;
  bytes channel_opts = 8;

  uint64 seq_nr = 9;
  bytes config_digest = 10;
  uint32 don_id = 11;
}

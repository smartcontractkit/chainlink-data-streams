// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: report_telemetry.proto

package llo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LLOReportTelemetry sent for each channel on every call to Report (once per
// round)
type LLOReportTelemetry struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId                       uint32                 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ValidAfterNanoseconds           uint64                 `protobuf:"varint,2,opt,name=valid_after_nanoseconds,json=validAfterNanoseconds,proto3" json:"valid_after_nanoseconds,omitempty"`
	ObservationTimestampNanoseconds uint64                 `protobuf:"varint,3,opt,name=observation_timestamp_nanoseconds,json=observationTimestampNanoseconds,proto3" json:"observation_timestamp_nanoseconds,omitempty"`
	ReportFormat                    uint32                 `protobuf:"varint,4,opt,name=report_format,json=reportFormat,proto3" json:"report_format,omitempty"`
	Specimen                        bool                   `protobuf:"varint,5,opt,name=specimen,proto3" json:"specimen,omitempty"`
	StreamDefinitions               []*LLOStreamDefinition `protobuf:"bytes,6,rep,name=stream_definitions,json=streamDefinitions,proto3" json:"stream_definitions,omitempty"`
	StreamValues                    []*LLOStreamValue      `protobuf:"bytes,7,rep,name=stream_values,json=streamValues,proto3" json:"stream_values,omitempty"`
	ChannelOpts                     []byte                 `protobuf:"bytes,8,opt,name=channel_opts,json=channelOpts,proto3" json:"channel_opts,omitempty"`
	SeqNr                           uint64                 `protobuf:"varint,9,opt,name=seq_nr,json=seqNr,proto3" json:"seq_nr,omitempty"`
	ConfigDigest                    []byte                 `protobuf:"bytes,10,opt,name=config_digest,json=configDigest,proto3" json:"config_digest,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *LLOReportTelemetry) Reset() {
	*x = LLOReportTelemetry{}
	mi := &file_report_telemetry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLOReportTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOReportTelemetry) ProtoMessage() {}

func (x *LLOReportTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_report_telemetry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOReportTelemetry.ProtoReflect.Descriptor instead.
func (*LLOReportTelemetry) Descriptor() ([]byte, []int) {
	return file_report_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *LLOReportTelemetry) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *LLOReportTelemetry) GetValidAfterNanoseconds() uint64 {
	if x != nil {
		return x.ValidAfterNanoseconds
	}
	return 0
}

func (x *LLOReportTelemetry) GetObservationTimestampNanoseconds() uint64 {
	if x != nil {
		return x.ObservationTimestampNanoseconds
	}
	return 0
}

func (x *LLOReportTelemetry) GetReportFormat() uint32 {
	if x != nil {
		return x.ReportFormat
	}
	return 0
}

func (x *LLOReportTelemetry) GetSpecimen() bool {
	if x != nil {
		return x.Specimen
	}
	return false
}

func (x *LLOReportTelemetry) GetStreamDefinitions() []*LLOStreamDefinition {
	if x != nil {
		return x.StreamDefinitions
	}
	return nil
}

func (x *LLOReportTelemetry) GetStreamValues() []*LLOStreamValue {
	if x != nil {
		return x.StreamValues
	}
	return nil
}

func (x *LLOReportTelemetry) GetChannelOpts() []byte {
	if x != nil {
		return x.ChannelOpts
	}
	return nil
}

func (x *LLOReportTelemetry) GetSeqNr() uint64 {
	if x != nil {
		return x.SeqNr
	}
	return 0
}

func (x *LLOReportTelemetry) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

var File_report_telemetry_proto protoreflect.FileDescriptor

var file_report_telemetry_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x13, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd8, 0x03, 0x0a, 0x12, 0x4c, 0x4c, 0x4f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x4a, 0x0a, 0x21, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x46, 0x0a, 0x12,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c,
	0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x3b, 0x6c, 0x6c, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_report_telemetry_proto_rawDescOnce sync.Once
	file_report_telemetry_proto_rawDescData []byte
)

func file_report_telemetry_proto_rawDescGZIP() []byte {
	file_report_telemetry_proto_rawDescOnce.Do(func() {
		file_report_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_report_telemetry_proto_rawDesc), len(file_report_telemetry_proto_rawDesc)))
	})
	return file_report_telemetry_proto_rawDescData
}

var file_report_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_report_telemetry_proto_goTypes = []any{
	(*LLOReportTelemetry)(nil),  // 0: v1.LLOReportTelemetry
	(*LLOStreamDefinition)(nil), // 1: v1.LLOStreamDefinition
	(*LLOStreamValue)(nil),      // 2: v1.LLOStreamValue
}
var file_report_telemetry_proto_depIdxs = []int32{
	1, // 0: v1.LLOReportTelemetry.stream_definitions:type_name -> v1.LLOStreamDefinition
	2, // 1: v1.LLOReportTelemetry.stream_values:type_name -> v1.LLOStreamValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_report_telemetry_proto_init() }
func file_report_telemetry_proto_init() {
	if File_report_telemetry_proto != nil {
		return
	}
	file_plugin_codecs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_report_telemetry_proto_rawDesc), len(file_report_telemetry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_report_telemetry_proto_goTypes,
		DependencyIndexes: file_report_telemetry_proto_depIdxs,
		MessageInfos:      file_report_telemetry_proto_msgTypes,
	}.Build()
	File_report_telemetry_proto = out.File
	file_report_telemetry_proto_goTypes = nil
	file_report_telemetry_proto_depIdxs = nil
}

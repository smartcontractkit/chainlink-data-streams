// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: plugin_codecs.proto

package llo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LLOStreamValue_Type int32

const (
	LLOStreamValue_Decimal LLOStreamValue_Type = 0
	LLOStreamValue_Quote   LLOStreamValue_Type = 1
)

// Enum value maps for LLOStreamValue_Type.
var (
	LLOStreamValue_Type_name = map[int32]string{
		0: "Decimal",
		1: "Quote",
	}
	LLOStreamValue_Type_value = map[string]int32{
		"Decimal": 0,
		"Quote":   1,
	}
)

func (x LLOStreamValue_Type) Enum() *LLOStreamValue_Type {
	p := new(LLOStreamValue_Type)
	*p = x
	return p
}

func (x LLOStreamValue_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLOStreamValue_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_codecs_proto_enumTypes[0].Descriptor()
}

func (LLOStreamValue_Type) Type() protoreflect.EnumType {
	return &file_plugin_codecs_proto_enumTypes[0]
}

func (x LLOStreamValue_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLOStreamValue_Type.Descriptor instead.
func (LLOStreamValue_Type) EnumDescriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{1, 0}
}

// WARNING
// Use extreme caution making changes in this file
// All changes MUST be backwards compatible
// If the format changes in a backwards incompatible way, active DONs can
// become stuck permanently
type LLOObservationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestedPredecessorRetirement []byte   `protobuf:"bytes,1,opt,name=attestedPredecessorRetirement,proto3" json:"attestedPredecessorRetirement,omitempty"`
	ShouldRetire                  bool     `protobuf:"varint,2,opt,name=shouldRetire,proto3" json:"shouldRetire,omitempty"`
	UnixTimestampNanoseconds      int64    `protobuf:"varint,3,opt,name=unixTimestampNanoseconds,proto3" json:"unixTimestampNanoseconds,omitempty"`
	RemoveChannelIDs              []uint32 `protobuf:"varint,4,rep,packed,name=removeChannelIDs,proto3" json:"removeChannelIDs,omitempty"`
	// Maps are safe to use here because Observation serialization does not
	// need to be deterministic. Non-deterministic map serialization is
	// marginally more efficient than converting to tuples and guarantees
	// uniqueness.
	UpdateChannelDefinitions map[uint32]*LLOChannelDefinitionProto `protobuf:"bytes,5,rep,name=updateChannelDefinitions,proto3" json:"updateChannelDefinitions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StreamValues             map[uint32]*LLOStreamValue            `protobuf:"bytes,6,rep,name=streamValues,proto3" json:"streamValues,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LLOObservationProto) Reset() {
	*x = LLOObservationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOObservationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOObservationProto) ProtoMessage() {}

func (x *LLOObservationProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOObservationProto.ProtoReflect.Descriptor instead.
func (*LLOObservationProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{0}
}

func (x *LLOObservationProto) GetAttestedPredecessorRetirement() []byte {
	if x != nil {
		return x.AttestedPredecessorRetirement
	}
	return nil
}

func (x *LLOObservationProto) GetShouldRetire() bool {
	if x != nil {
		return x.ShouldRetire
	}
	return false
}

func (x *LLOObservationProto) GetUnixTimestampNanoseconds() int64 {
	if x != nil {
		return x.UnixTimestampNanoseconds
	}
	return 0
}

func (x *LLOObservationProto) GetRemoveChannelIDs() []uint32 {
	if x != nil {
		return x.RemoveChannelIDs
	}
	return nil
}

func (x *LLOObservationProto) GetUpdateChannelDefinitions() map[uint32]*LLOChannelDefinitionProto {
	if x != nil {
		return x.UpdateChannelDefinitions
	}
	return nil
}

func (x *LLOObservationProto) GetStreamValues() map[uint32]*LLOStreamValue {
	if x != nil {
		return x.StreamValues
	}
	return nil
}

type LLOStreamValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  LLOStreamValue_Type `protobuf:"varint,1,opt,name=type,proto3,enum=v1.LLOStreamValue_Type" json:"type,omitempty"`
	Value []byte              `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LLOStreamValue) Reset() {
	*x = LLOStreamValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOStreamValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOStreamValue) ProtoMessage() {}

func (x *LLOStreamValue) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOStreamValue.ProtoReflect.Descriptor instead.
func (*LLOStreamValue) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{1}
}

func (x *LLOStreamValue) GetType() LLOStreamValue_Type {
	if x != nil {
		return x.Type
	}
	return LLOStreamValue_Decimal
}

func (x *LLOStreamValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type LLOStreamValueQuote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid       []byte `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	Benchmark []byte `protobuf:"bytes,2,opt,name=benchmark,proto3" json:"benchmark,omitempty"`
	Ask       []byte `protobuf:"bytes,3,opt,name=ask,proto3" json:"ask,omitempty"`
}

func (x *LLOStreamValueQuote) Reset() {
	*x = LLOStreamValueQuote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOStreamValueQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOStreamValueQuote) ProtoMessage() {}

func (x *LLOStreamValueQuote) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOStreamValueQuote.ProtoReflect.Descriptor instead.
func (*LLOStreamValueQuote) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{2}
}

func (x *LLOStreamValueQuote) GetBid() []byte {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *LLOStreamValueQuote) GetBenchmark() []byte {
	if x != nil {
		return x.Benchmark
	}
	return nil
}

func (x *LLOStreamValueQuote) GetAsk() []byte {
	if x != nil {
		return x.Ask
	}
	return nil
}

type LLOChannelDefinitionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportFormat uint32                 `protobuf:"varint,1,opt,name=reportFormat,proto3" json:"reportFormat,omitempty"`
	Streams      []*LLOStreamDefinition `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"`
	Opts         []byte                 `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *LLOChannelDefinitionProto) Reset() {
	*x = LLOChannelDefinitionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOChannelDefinitionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOChannelDefinitionProto) ProtoMessage() {}

func (x *LLOChannelDefinitionProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOChannelDefinitionProto.ProtoReflect.Descriptor instead.
func (*LLOChannelDefinitionProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{3}
}

func (x *LLOChannelDefinitionProto) GetReportFormat() uint32 {
	if x != nil {
		return x.ReportFormat
	}
	return 0
}

func (x *LLOChannelDefinitionProto) GetStreams() []*LLOStreamDefinition {
	if x != nil {
		return x.Streams
	}
	return nil
}

func (x *LLOChannelDefinitionProto) GetOpts() []byte {
	if x != nil {
		return x.Opts
	}
	return nil
}

type LLOStreamDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID   uint32 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Aggregator uint32 `protobuf:"varint,2,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
}

func (x *LLOStreamDefinition) Reset() {
	*x = LLOStreamDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOStreamDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOStreamDefinition) ProtoMessage() {}

func (x *LLOStreamDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOStreamDefinition.ProtoReflect.Descriptor instead.
func (*LLOStreamDefinition) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{4}
}

func (x *LLOStreamDefinition) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *LLOStreamDefinition) GetAggregator() uint32 {
	if x != nil {
		return x.Aggregator
	}
	return 0
}

type LLOStreamObservationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LLOStreamObservationProto) Reset() {
	*x = LLOStreamObservationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOStreamObservationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOStreamObservationProto) ProtoMessage() {}

func (x *LLOStreamObservationProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOStreamObservationProto.ProtoReflect.Descriptor instead.
func (*LLOStreamObservationProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{5}
}

func (x *LLOStreamObservationProto) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *LLOStreamObservationProto) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// NOTE: Outcome must serialize deterministically, hence use of repeated tuple instead of maps
type LLOOutcomeProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LifeCycleStage                   string                                   `protobuf:"bytes,1,opt,name=lifeCycleStage,proto3" json:"lifeCycleStage,omitempty"`
	ObservationsTimestampNanoseconds int64                                    `protobuf:"varint,2,opt,name=observationsTimestampNanoseconds,proto3" json:"observationsTimestampNanoseconds,omitempty"`
	ChannelDefinitions               []*LLOChannelIDAndDefinitionProto        `protobuf:"bytes,3,rep,name=channelDefinitions,proto3" json:"channelDefinitions,omitempty"`
	ValidAfterSeconds                []*LLOChannelIDAndValidAfterSecondsProto `protobuf:"bytes,4,rep,name=validAfterSeconds,proto3" json:"validAfterSeconds,omitempty"`
	StreamAggregates                 []*LLOStreamAggregate                    `protobuf:"bytes,5,rep,name=streamAggregates,proto3" json:"streamAggregates,omitempty"`
}

func (x *LLOOutcomeProto) Reset() {
	*x = LLOOutcomeProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOOutcomeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOOutcomeProto) ProtoMessage() {}

func (x *LLOOutcomeProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOOutcomeProto.ProtoReflect.Descriptor instead.
func (*LLOOutcomeProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{6}
}

func (x *LLOOutcomeProto) GetLifeCycleStage() string {
	if x != nil {
		return x.LifeCycleStage
	}
	return ""
}

func (x *LLOOutcomeProto) GetObservationsTimestampNanoseconds() int64 {
	if x != nil {
		return x.ObservationsTimestampNanoseconds
	}
	return 0
}

func (x *LLOOutcomeProto) GetChannelDefinitions() []*LLOChannelIDAndDefinitionProto {
	if x != nil {
		return x.ChannelDefinitions
	}
	return nil
}

func (x *LLOOutcomeProto) GetValidAfterSeconds() []*LLOChannelIDAndValidAfterSecondsProto {
	if x != nil {
		return x.ValidAfterSeconds
	}
	return nil
}

func (x *LLOOutcomeProto) GetStreamAggregates() []*LLOStreamAggregate {
	if x != nil {
		return x.StreamAggregates
	}
	return nil
}

type LLOChannelIDAndDefinitionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID         uint32                     `protobuf:"varint,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	ChannelDefinition *LLOChannelDefinitionProto `protobuf:"bytes,2,opt,name=channelDefinition,proto3" json:"channelDefinition,omitempty"`
}

func (x *LLOChannelIDAndDefinitionProto) Reset() {
	*x = LLOChannelIDAndDefinitionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOChannelIDAndDefinitionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOChannelIDAndDefinitionProto) ProtoMessage() {}

func (x *LLOChannelIDAndDefinitionProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOChannelIDAndDefinitionProto.ProtoReflect.Descriptor instead.
func (*LLOChannelIDAndDefinitionProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{7}
}

func (x *LLOChannelIDAndDefinitionProto) GetChannelID() uint32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *LLOChannelIDAndDefinitionProto) GetChannelDefinition() *LLOChannelDefinitionProto {
	if x != nil {
		return x.ChannelDefinition
	}
	return nil
}

type LLOChannelIDAndValidAfterSecondsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID         uint32 `protobuf:"varint,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	ValidAfterSeconds uint32 `protobuf:"varint,2,opt,name=validAfterSeconds,proto3" json:"validAfterSeconds,omitempty"`
}

func (x *LLOChannelIDAndValidAfterSecondsProto) Reset() {
	*x = LLOChannelIDAndValidAfterSecondsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOChannelIDAndValidAfterSecondsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOChannelIDAndValidAfterSecondsProto) ProtoMessage() {}

func (x *LLOChannelIDAndValidAfterSecondsProto) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOChannelIDAndValidAfterSecondsProto.ProtoReflect.Descriptor instead.
func (*LLOChannelIDAndValidAfterSecondsProto) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{8}
}

func (x *LLOChannelIDAndValidAfterSecondsProto) GetChannelID() uint32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *LLOChannelIDAndValidAfterSecondsProto) GetValidAfterSeconds() uint32 {
	if x != nil {
		return x.ValidAfterSeconds
	}
	return 0
}

type LLOStreamAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID    uint32          `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	StreamValue *LLOStreamValue `protobuf:"bytes,2,opt,name=streamValue,proto3" json:"streamValue,omitempty"`
	Aggregator  uint32          `protobuf:"varint,3,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
}

func (x *LLOStreamAggregate) Reset() {
	*x = LLOStreamAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_codecs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLOStreamAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLOStreamAggregate) ProtoMessage() {}

func (x *LLOStreamAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_codecs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLOStreamAggregate.ProtoReflect.Descriptor instead.
func (*LLOStreamAggregate) Descriptor() ([]byte, []int) {
	return file_plugin_codecs_proto_rawDescGZIP(), []int{9}
}

func (x *LLOStreamAggregate) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *LLOStreamAggregate) GetStreamValue() *LLOStreamValue {
	if x != nil {
		return x.StreamValue
	}
	return nil
}

func (x *LLOStreamAggregate) GetAggregator() uint32 {
	if x != nil {
		return x.Aggregator
	}
	return 0
}

var File_plugin_codecs_proto protoreflect.FileDescriptor

var file_plugin_codecs_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0xea, 0x04, 0x0a, 0x13, 0x4c, 0x4c,
	0x4f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x44, 0x0a, 0x1d, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x65,
	0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x74,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x75,
	0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x75,
	0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x73, 0x12, 0x71, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x6a, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x53, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x0e, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x10, 0x01, 0x22, 0x57, 0x0a, 0x13, 0x4c,
	0x4c, 0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x62, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x61, 0x73, 0x6b, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x51, 0x0a,
	0x13, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x47, 0x0a, 0x19, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x0f, 0x4c, 0x4c,
	0x4f, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x20, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61,
	0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x20, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x52, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x41,
	0x6e, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x42,
	0x0a, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c,
	0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x4b, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x73, 0x0a, 0x25, 0x4c, 0x4c, 0x4f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x3b, 0x6c, 0x6c, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_codecs_proto_rawDescOnce sync.Once
	file_plugin_codecs_proto_rawDescData = file_plugin_codecs_proto_rawDesc
)

func file_plugin_codecs_proto_rawDescGZIP() []byte {
	file_plugin_codecs_proto_rawDescOnce.Do(func() {
		file_plugin_codecs_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_codecs_proto_rawDescData)
	})
	return file_plugin_codecs_proto_rawDescData
}

var file_plugin_codecs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plugin_codecs_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_plugin_codecs_proto_goTypes = []interface{}{
	(LLOStreamValue_Type)(0),                      // 0: v1.LLOStreamValue.Type
	(*LLOObservationProto)(nil),                   // 1: v1.LLOObservationProto
	(*LLOStreamValue)(nil),                        // 2: v1.LLOStreamValue
	(*LLOStreamValueQuote)(nil),                   // 3: v1.LLOStreamValueQuote
	(*LLOChannelDefinitionProto)(nil),             // 4: v1.LLOChannelDefinitionProto
	(*LLOStreamDefinition)(nil),                   // 5: v1.LLOStreamDefinition
	(*LLOStreamObservationProto)(nil),             // 6: v1.LLOStreamObservationProto
	(*LLOOutcomeProto)(nil),                       // 7: v1.LLOOutcomeProto
	(*LLOChannelIDAndDefinitionProto)(nil),        // 8: v1.LLOChannelIDAndDefinitionProto
	(*LLOChannelIDAndValidAfterSecondsProto)(nil), // 9: v1.LLOChannelIDAndValidAfterSecondsProto
	(*LLOStreamAggregate)(nil),                    // 10: v1.LLOStreamAggregate
	nil,                                           // 11: v1.LLOObservationProto.UpdateChannelDefinitionsEntry
	nil,                                           // 12: v1.LLOObservationProto.StreamValuesEntry
}
var file_plugin_codecs_proto_depIdxs = []int32{
	11, // 0: v1.LLOObservationProto.updateChannelDefinitions:type_name -> v1.LLOObservationProto.UpdateChannelDefinitionsEntry
	12, // 1: v1.LLOObservationProto.streamValues:type_name -> v1.LLOObservationProto.StreamValuesEntry
	0,  // 2: v1.LLOStreamValue.type:type_name -> v1.LLOStreamValue.Type
	5,  // 3: v1.LLOChannelDefinitionProto.streams:type_name -> v1.LLOStreamDefinition
	8,  // 4: v1.LLOOutcomeProto.channelDefinitions:type_name -> v1.LLOChannelIDAndDefinitionProto
	9,  // 5: v1.LLOOutcomeProto.validAfterSeconds:type_name -> v1.LLOChannelIDAndValidAfterSecondsProto
	10, // 6: v1.LLOOutcomeProto.streamAggregates:type_name -> v1.LLOStreamAggregate
	4,  // 7: v1.LLOChannelIDAndDefinitionProto.channelDefinition:type_name -> v1.LLOChannelDefinitionProto
	2,  // 8: v1.LLOStreamAggregate.streamValue:type_name -> v1.LLOStreamValue
	4,  // 9: v1.LLOObservationProto.UpdateChannelDefinitionsEntry.value:type_name -> v1.LLOChannelDefinitionProto
	2,  // 10: v1.LLOObservationProto.StreamValuesEntry.value:type_name -> v1.LLOStreamValue
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_plugin_codecs_proto_init() }
func file_plugin_codecs_proto_init() {
	if File_plugin_codecs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_codecs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOObservationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOStreamValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOStreamValueQuote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOChannelDefinitionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOStreamDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOStreamObservationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOOutcomeProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOChannelIDAndDefinitionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOChannelIDAndValidAfterSecondsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_codecs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLOStreamAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_codecs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_codecs_proto_goTypes,
		DependencyIndexes: file_plugin_codecs_proto_depIdxs,
		EnumInfos:         file_plugin_codecs_proto_enumTypes,
		MessageInfos:      file_plugin_codecs_proto_msgTypes,
	}.Build()
	File_plugin_codecs_proto = out.File
	file_plugin_codecs_proto_rawDesc = nil
	file_plugin_codecs_proto_goTypes = nil
	file_plugin_codecs_proto_depIdxs = nil
}
